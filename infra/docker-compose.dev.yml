version: '3.3'
name: foodgram

services:

  db:
    image: postgres:13.10
    container_name: db
    restart: always
    env_file: 
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: foodgram_backend
    restart: always
    ports:
      - "8000:8000"
    env_file: 
      - ./.env
    volumes:
      - static_dir:/app/static/
      - media_dir:/app/media/
      - data_dir:/app/data/
      - ../backend/foodgram_backend:/app/foodgram
    depends_on:
      - db

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: foodgram_frontend
    volumes:
      - ../frontend/:/app/result_build/
  
  nginx:
    image: nginx:1.19.3
    container_name: foodgram_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_dir:/var/html/static/
      - media_dir:/var/html/media/
    depends_on:
      - db
      - backend
      - frontend

volumes:
  static_dir:
  media_dir:
  data_dir:
  postgres_data: